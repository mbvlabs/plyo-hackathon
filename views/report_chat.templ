package views

import (
	"github.com/mbvlabs/plyo-hackathon/models"
	"fmt"
	"github.com/dustin/go-humanize"
	"time"
)

templ ReportChat(report models.Report) {
	@base() {
		<div class="flex h-screen bg-gray-50">
			<div class="flex-1 flex flex-col">
				<div class="bg-white border-b border-gray-200 p-4">
					<div class="flex items-center justify-between">
						<div>
							<h2 class="text-xl font-semibold text-gray-900">{ report.CompanyName } Research</h2>
							<p class="text-sm text-gray-600">Deep company intelligence analysis</p>
						</div>
						@ReportHeaderProgress(report)
					</div>
				</div>
				<div class="flex-1 overflow-y-auto bg-white">
					<div
						id="reportProgressPuller"
						data-on-interval__duration.1s={ fmt.Sprintf(`@get('/reports/%s/stream')`, report.ID.String()) }
					>
						@ReportProgress(report)
					</div>
				</div>
				<div class="bg-white border-t border-gray-200 p-4">
					<div class="max-w-4xl mx-auto">
						@ReportUpdated(report.UpdatedAt)
					</div>
				</div>
			</div>
		</div>
	}
}

templ ReportUpdated(t time.Time) {
	<div class="flex items-center justify-between text-sm text-gray-500">
		<p>This page will automatically update as the research progresses.</p>
		<p>Last updated: { humanize.Time(t) }</p>
	</div>
}

func statusBadgeClass(status string) string {
	switch status {
	case "completed":
		return "bg-green-100 text-green-800"
	case "in_progress":
		return "bg-yellow-100 text-yellow-800"
	case "pending":
		return "bg-blue-100 text-blue-800"
	default:
		return "bg-gray-100 text-gray-800"
	}
}
