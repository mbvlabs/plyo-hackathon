package views

import (
	"github.com/mbvlabs/plyo-hackathon/models"
	"fmt"
)

templ ReportChat(report models.Report) {
	@base() {
		<div class="flex h-screen bg-gray-50">
			<!-- Sidebar -->
			<div class="w-64 bg-gray-900 text-white flex flex-col">
				<!-- Header -->
				<div class="p-4 border-b border-gray-700">
					<div class="flex items-center space-x-3">
						<div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">
							<svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"></path>
							</svg>
						</div>
						<h1 class="text-lg font-semibold">Company GPT</h1>
					</div>
				</div>
				<!-- New Chat Button -->
				<div class="p-4">
					<a href="/" class="flex items-center justify-center w-full px-3 py-2 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors">
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
						</svg>
						New research
					</a>
				</div>
				<!-- Chat History (placeholder) -->
				<div class="flex-1 overflow-y-auto px-4">
					<div class="space-y-2">
						<!-- Current Report -->
						<div class="p-3 bg-gray-800 rounded-lg">
							<div class="flex items-start justify-between">
								<div class="flex-1">
									<h3 class="text-sm font-medium text-white truncate">{ report.CompanyName }</h3>
									<p class="text-xs text-gray-400 mt-1">{ fmt.Sprintf("%.0f%% complete", float64(report.ProgressPercentage)) }</p>
								</div>
								<div class="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
							</div>
						</div>
					</div>
				</div>
				<!-- Footer -->
				<div class="p-4 border-t border-gray-700">
					<div class="text-xs text-gray-400">
						<p>Report ID: { report.ID.String()[:8] }...</p>
						<p>Status: { report.Status }</p>
					</div>
				</div>
			</div>
			<!-- Main Chat Area -->
			<div class="flex-1 flex flex-col">
				<!-- Chat Header -->
				<div class="bg-white border-b border-gray-200 p-4">
					<div class="flex items-center justify-between">
						<div>
							<h2 class="text-xl font-semibold text-gray-900">{ report.CompanyName } Research</h2>
							<p class="text-sm text-gray-600">Deep company intelligence analysis</p>
						</div>
						<div class="flex items-center space-x-4" id="progress-header">
							@ReportHeaderProgress(report)
						</div>
					</div>
				</div>
				<!-- Chat Messages -->
				<div class="flex-1 overflow-y-auto bg-white">
					<div
						data-store={ fmt.Sprintf(`{"reportId": "%s"}`, report.ID.String()) }
						data-on-load={ fmt.Sprintf(`@get('/reports/%s/stream')`, report.ID.String()) }
					>
						@ReportProgress(report)
					</div>
				</div>
				<!-- Footer with auto-refresh info -->
				<div class="bg-white border-t border-gray-200 p-4">
					<div class="max-w-4xl mx-auto">
						<div class="flex items-center justify-between text-sm text-gray-500">
							<p>This page will automatically update as the research progresses.</p>
							<p>Last updated: { report.UpdatedAt.Format("Jan 2, 2006 at 3:04 PM") }</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

func statusBadgeClass(status string) string {
	switch status {
	case "completed":
		return "bg-green-100 text-green-800"
	case "in_progress":
		return "bg-yellow-100 text-yellow-800"
	case "pending":
		return "bg-blue-100 text-blue-800"
	default:
		return "bg-gray-100 text-gray-800"
	}
}

