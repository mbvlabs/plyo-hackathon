// Code generated by andurel. DO NOT EDIT.
// This file contains constructor functions for SQLC parameters.
// These functions are automatically updated during schema refresh operations.

package db

import (
	"database/sql"

	"github.com/google/uuid"
)

// Constructor functions for SQLC parameters - these get updated during refresh
// to make schema changes compiler-enforced and visible

func NewInsertReportParams(
	companyCandidateID string,
	companyname string,
	status string,
	progresspercentage sql.NullInt64,
	preliminaryresearchcompleted sql.NullBool,
	companyintelligencecompleted sql.NullBool,
	competitiveintelligencecompleted sql.NullBool,
	marketdynamicscompleted sql.NullBool,
	trendanalysiscompleted sql.NullBool,
	companyintelligencedata sql.NullString,
	competitiveintelligencedata sql.NullString,
	marketdynamicsdata sql.NullString,
	trendanalysisdata sql.NullString,
	finalreport sql.NullString,
	completedat sql.NullTime,
) InsertReportParams {
	return InsertReportParams{
		ID:                               uuid.New().String(),
		CompayCandidateID:                companyCandidateID,
		CompanyName:                      companyname,
		Status:                           status,
		ProgressPercentage:               progresspercentage,
		PreliminaryResearchCompleted:     preliminaryresearchcompleted,
		CompanyIntelligenceCompleted:     companyintelligencecompleted,
		CompetitiveIntelligenceCompleted: competitiveintelligencecompleted,
		MarketDynamicsCompleted:          marketdynamicscompleted,
		TrendAnalysisCompleted:           trendanalysiscompleted,
		CompanyIntelligenceData:          companyintelligencedata,
		CompetitiveIntelligenceData:      competitiveintelligencedata,
		MarketDynamicsData:               marketdynamicsdata,
		TrendAnalysisData:                trendanalysisdata,
		FinalReport:                      finalreport,
		CompletedAt:                      completedat,
	}
}

func NewUpdateReportParams(
	id string,
	companyCandidateID string,
	companyname string,
	status string,
	progresspercentage sql.NullInt64,
	preliminaryresearchcompleted sql.NullBool,
	companyintelligencecompleted sql.NullBool,
	competitiveintelligencecompleted sql.NullBool,
	marketdynamicscompleted sql.NullBool,
	trendanalysiscompleted sql.NullBool,
	companyintelligencedata sql.NullString,
	competitiveintelligencedata sql.NullString,
	marketdynamicsdata sql.NullString,
	trendanalysisdata sql.NullString,
	finalreport sql.NullString,
	completedat sql.NullTime,
) UpdateReportParams {
	return UpdateReportParams{
		ID:                               id,
		CompayCandidateID:                companyCandidateID,
		CompanyName:                      companyname,
		Status:                           status,
		ProgressPercentage:               progresspercentage,
		PreliminaryResearchCompleted:     preliminaryresearchcompleted,
		CompanyIntelligenceCompleted:     companyintelligencecompleted,
		CompetitiveIntelligenceCompleted: competitiveintelligencecompleted,
		MarketDynamicsCompleted:          marketdynamicscompleted,
		TrendAnalysisCompleted:           trendanalysiscompleted,
		CompanyIntelligenceData:          companyintelligencedata,
		CompetitiveIntelligenceData:      competitiveintelligencedata,
		MarketDynamicsData:               marketdynamicsdata,
		TrendAnalysisData:                trendanalysisdata,
		FinalReport:                      finalreport,
		CompletedAt:                      completedat,
	}
}

func NewQueryPaginatedReportsParams(limit, offset int64) QueryPaginatedReportsParams {
	return QueryPaginatedReportsParams{
		Limit:  limit,
		Offset: offset,
	}
}
